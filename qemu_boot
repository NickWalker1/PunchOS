#!/bin/sh

# PunchOS Boot script
#
# Qemu/VNC Info:
# https://people.redhat.com/pbonzini/qemu-test-doc/_build/html/topics/vnc_005fsecurity.html

. ./config

# Inital vars
DEFAULT_OFFSET=$(( `id -u` % 500 )) # Try for consistent port numbers
HOSTFWD=""

VNCPASSWORD="NO PASSWORD"

# Create COW file if it doesn't exist
if [ ! -f $LOCALQM_ISO ];
then
    echo -n "Creating COW file for coursework"
    qemu-img create -f qcow2 -b $VMIMAGES_IMG $LOCALQM_ISO
    echo `date +%F_%T` "Creating COW file for coursework" >> $LOGFILE
    echo "done."

elif [ -e $LOCALQM_LOCK ] # detect if already running
then
    ALREADYHOST=`cat $LOCALQM_LOCK |cut -f1 -d,`
    ALREADYVNC=`cat $LOCALQM_LOCK |cut -f3 -d,`
    HOST=`hostname`
    if [ $ALREADYHOST == $HOST ]
    then
        nc -z 127.0.0.1 $ALREADYVNC
        VNCRV=$?
        if [ $VNCRV == 0 ]
        then
            echo "VNC= localhost:$ALREADYVNC"
            (echo "change vnc password"; echo $VNCPASSWORD) | (socat - unix-connect:$LOCALQM_MONITOR) > /dev/null &
            echo "To connect, use one the following:"
            echo "    vncviewer localhost:$ALREADYVNC # ( password= $VNCPASSWORD )"
            exit 2
        fi
     else
        echo "Error: Detected session running on \"$ALREADYHOST\", running this machine in two places at once will cause corruption"
        echo `date +%F_%T` "Error: Detected session running on $ALREADYHOST" >> $LOGFILE
        echo "Please kill your qemu-kvm process on $ALREADYHOST or if no longer running on $ALREADYHOST, remove $LOCALQM_LOCK and rerun this script"
        exit 3
    fi
fi

COUNT=0
VNCPORT=$(( $BASE_PORT_VNC + $DEFAULT_OFFSET ))
while [[ $VNCPORT -lt $(( $BASE_PORT_VNC + 500 )) ]] && [[ $COUNT < 1000 ]]
do
    netstat -elptn4 2>/dev/null|grep ":$VNCPORT " >/dev/null
    if [ $? != 0 ]
    then
        echo
        echo "VNC server will start on port $VNCPORT, to connect use ( password= $VNCPASSWORD )"
        echo "    vncviewer localhost:$VNCPORT"
        break
    fi
    VNCPORT=$(( $RANDOM % 500 + $BASE_PORT_VNC ))
    COUNT=$(( COUNT + 1))
done

COUNT=0

echo "$HOSTNAME,$VNCPORT" > $LOCALQM_LOCK
echo `date +%F_%T` "$HOSTNAME,$VNCPORT,$MACHINETYPE started" >> $LOGFILE

(sleep 1; echo "change vnc password"; echo $VNCPASSWORD) | (sleep 1; socat - unix-connect:$LOCALQM_MONITOR) > /dev/null &
echo "Running VM..."
/usr/libexec/qemu-kvm -k en-gb -m $RAM $MACHINETYPE -vnc 127.0.0.1:$(($VNCPORT-5900)) -monitor unix:$LOCALQM_MONITOR,server,nowait -device virtio-net,netdev=net0 -netdev user,id=net0$HOSTFWD $LOCALQM_ISO


rm $LOCALQM_LOCK 
#rm $LOCALQM_MONITOR
echo `date +%F_%T` "$HOSTNAME,$VNCPORT shutdown" >> $LOGFILE
echo "Ended."
